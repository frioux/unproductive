# unproductive

A tool for finding out how unproductive I really am.

## Description

Unproductive has four major parts.

### `unproductive`

The first part runs constantly and polls the X server, extracting the title of
the currently selected window and printing it, along with the current timestamp,
what SSID you are connected to, and if you are running a vpn, to standard out.
Expected usage is:

``` bash
$ unproductive | tee -a ~/activity-log.txt
```

An example recorded line is:

```
1528639301	Station	false	work:vim:/home/frew/code/unproductive
```

### `filter`

`filter` filters the data before rendering it.  The following flags are built
in:

 * `--time`
 * `--ssid`
 * `--vpn`

So you might be run the following command to see the past week of data when you
were working from home:

``` bash
$ < ~/activity-log.txt filter --time 7d --ssid Station --vpn
```

There is also a standalone filter tool called `measurements`.  Where the
`--time` flag from `filter` allows you to limit to only the past `1h` of data,
`measurements` just takes the last `1h` of data, no matter when it occurred.  So
for example, if your laptop was asleep for the past hour and you turned it on,
`filter --time 1h` would return almost no data.  `measurements 1h` would return
a full hour, but it would have a gap.

### `retitle`

Better names for this are welcome.  This reads the raw titles and writes a JSON
list that expresses a heirarchy of what you were doing.  An example is surely
more clear:

``` bash
$ echo 'core | ZipRecruiter Slack - Mozilla Firefox' | retitle
["Chat", "Slack", "ZR", "Work", "core"]
```

I suspect that this tool will need to be custom built for each user.  That's
fine.

### `report`

Finally, the `report` tool reads the JSON and sums and outputs the values in a
fashion that should be reminiscent of `du(1)`.  Here's an example bit of output,
including all the tools discussed:

``` bash
$ < ~/activity-log.txt filter --time 1h |
   retitle |
   report -show-percents |
   sort -n
1       (0%)    Coffee/Writing
1       (0%)    Email
1       (0%)    Email/ZR
1       (0%)    Email/ZR/mutt
2       (0%)    Chat/IRC
3       (0%)    Coffee/Reading
4       (0%)    Chat/Play/Discord
4       (0%)    Chat/Play/Discord/general
4       (0%)    Coffee
14      (0%)    Strategy/Notes/Reading
19      (1%)    Chrome
31      (2%)    Chat/Play
33      (2%)    Chat
50      (3%)    Strategy/Notes/Writing
64      (4%)    Strategy
64      (4%)    Strategy/Notes
557     (38%)   Firefox
768     (53%)   Fun
768     (53%)   Fun/Project
768     (53%)   Fun/Project/Unproductive
1446    (100%)
```

## Tips

For this to work well you need to set titles of your windows.  This mostly means
that terminal apps need to be configured a little.  I use tmux, so I needed to
put the following two settings in my `.tmux.conf`:

``` tmux
set -g set-titles on
set -g set-titles-string "#{session_name}:#{window_name}:#{pane_current_path}"
```

The first line tells `tmux` to set the title; the second changes the format to
something more useful than the default.

I also run `terminator` directly without `tmux` underneath.  In that case it is
worth directly setting the title.  Here's how I do that:

``` bash
$ terminator -e "vim -S $session" -T "vim:$session"
```

Other terminals will have similar settings and techniques.
